name: Docker Build and Push

on:
  push:
    branches: ['main', 'dev']
    tags:
      - 'v*.*.*'

env:
  CR_URL: cr.elpai.org
  CR_USERNAME: ${{ secrets.CR_USERNAME }}
  CR_PASSWORD: ${{ secrets.CR_PASSWORD }}

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.CR_URL }}
          username: ${{ env.CR_USERNAME }}
          password: ${{ env.CR_PASSWORD }}

      # props
      - name: Configure Properties
        id: props
        run: |
          image="${CR_URL}/${GITHUB_REPOSITORY@L}"
          echo "IMAGE=${image}" >> "$GITHUB_ENV"
          echo "image=${image}" >> "$GITHUB_OUTPUT"
          echo "image=${image}"

      # :dev, :dev-<sha>
      - name: Build & Push (dev)
        if: startsWith(github.ref, 'refs/heads/dev')
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.dev
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ steps.props.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.props.outputs.image }}:buildcache,mode=max
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref.name=${{ github.ref_name }}
          tags: |
            ${{ steps.props.outputs.image }}:dev
            ${{ steps.props.outputs.image }}:dev-${{ github.sha }}

      # :stg, :stg-<sha>
      - name: Build & Push (staging)
        if: startsWith(github.ref, 'refs/heads/main')
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ steps.props.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.props.outputs.image }}:buildcache,mode=max
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref.name=${{ github.ref_name }}
          tags: |
            ${{ steps.props.outputs.image }}:stg
            ${{ steps.props.outputs.image }}:stg-${{ github.sha }}

      # :vX.Y.Z, :latest
      - name: Build & Push (release)
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ steps.props.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.props.outputs.image }}:buildcache,mode=max
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref.name=${{ github.ref_name }}
          tags: |
            ${{ steps.props.outputs.image }}:${{ github.ref_name }}
            ${{ steps.props.outputs.image }}:latest
